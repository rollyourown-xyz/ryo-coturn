---

# Create directory for turn SQLite Database
#
- name: Create coturn sqlite database directory
  file:
    mode: 0775
    owner: turnserver
    group: turnserver
    path: /var/turn
    state: directory


# Check existence of a previously generated coturn static auth secret for the host
#
- name: Check existence of a previously generated coturn static auth secret for the host
  delegate_to: localhost
  stat:
    path: "{{ playbook_dir }}/../../configuration/coturn_static_auth_secret_{{ host_id }}.yml"
  register: coturn_static_auth_secret_file


# Load the coturn static auth secret from previously created file (if previously generated)
#
- name: Load the coturn static auth secret from previously created file
  include_vars:
    file: "{{ playbook_dir }}/../../configuration/coturn_static_auth_secret_{{ host_id }}.yml"
  when: coturn_static_auth_secret_file.stat.exists


# Generate a random string as coturn static auth secret (if not previously generated)
#
- name: Generate a random string as coturn static auth secret
  shell: "tr -dc A-Za-z0-9 </dev/urandom | head -c 12"
  register: coturn_static_auth_secret_stdout
  when: not coturn_static_auth_secret_file.stat.exists


# Assign the coturn static auth secret to the variable coturn_static_auth_secret (if not previously generated)
#
- name: Assign the coturn static auth secret to the variable coturn_static_auth_secret
  set_fact:
    coturn_static_auth_secret: "{{ coturn_static_auth_secret_stdout.stdout }}"
  when: not coturn_static_auth_secret_file.stat.exists


# Write the coturn static auth secret to a file in the module configuration directory on the local machine (if not previously generated)
#
- name: Write the coturn static auth secret to a file in the module configuration directory
  delegate_to: localhost
  template:
    mode: 0640
    owner: "{{ local_non_root_user }}"
    group: "{{ local_non_root_user }}"
    dest: "{{ playbook_dir }}/../../configuration/coturn_static_auth_secret_{{ host_id }}.yml"
    src: coturn_static_auth_secret.yml.j2
    force: yes
    backup: yes
  when: not coturn_static_auth_secret_file.stat.exists


# Copy initial coturn configuration file
#
- name: Copy initial coturn configuration file
  template:
    mode: 0644
    owner: root
    group: root
    dest: /etc/turnserver.conf
    src: turnserver.conf.j2
    force: yes


# Set the turnserver to run as automatic system service daemon
#
- name: Set turnserver as automatic system service daemon
  lineinfile:
    dest: /etc/default/coturn
    line: "TURNSERVER_ENABLED=1"
    state: present


# Create cron job to restart turn server daily at 4am (to pick up changed certs)
#
- name: Create cron to restart turn server
  cron:
    name: "coturn restart"
    month: "*"
    day: "*"
    weekday: "*"
    hour: "4"
    minute: "0"
    job: "systemctl restart coturn"
    state: present


# Copy coturn restart script
#
- name: Copy coturn restart script
  copy:
    mode: 0770
    owner: root
    group: root
    dest: /usr/local/bin/restart-coturn.sh
    src: restart-coturn.sh
    force: yes


# Copy coturn-services consul service configuration file
#
- name: Copy coturn-services consul service configuration file
  copy:
    mode: 0640
    owner: consul
    group: consul
    dest: /etc/consul.d/coturn-services.hcl
    src: coturn-services.hcl
    force: yes
